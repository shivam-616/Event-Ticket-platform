# --- Build Stage ---
# Use a Node.js image to build the static assets
FROM node:20-alpine AS builder
WORKDIR /app
# Copy package files and install dependencies
COPY package.json package-lock.json ./
# Or: COPY package.json yarn.lock ./
RUN npm install --frozen-lockfile
# Or: RUN yarn install --frozen-lockfile
# Copy the rest of the frontend code
COPY . .
# Build the production assets
RUN npm run build

# --- Final Stage ---
# Use a lightweight Nginx image
FROM nginx:stable-alpine
# Copy the built static files from the 'dist' folder of the build stage
COPY --from=builder /app/dist /usr/share/nginx/html
# Optional: If you need custom Nginx configuration (e.g., for routing fallbacks for react-router)
# Create an nginx.conf file in your frontend directory and uncomment the next line
# COPY nginx.conf /etc/nginx/conf.d/default.conf
# Expose the default Nginx port
EXPOSE 80
# Command to start Nginx in the foreground
CMD ["nginx", "-g", "daemon off;"]